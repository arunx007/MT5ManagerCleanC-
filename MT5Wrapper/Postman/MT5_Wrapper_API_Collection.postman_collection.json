{
  "info": {
    "name": "MT5 Wrapper API Collection - Complete",
    "description": "Complete API collection for MT5 Trading Platform Wrapper\n\n‚úÖ WORKING APIs (100% Tested):\n- Manager Authentication (30-day tokens)\n- Client Authentication (unlimited tokens)\n- Multi-tenant Architecture\n- User Management (CRUD operations)\n- Market Data (Charts, Quotes, Symbols)\n- WebSocket Real-time APIs (6 endpoints)\n- üìä Order Book WebSocket APIs (8 endpoints)\n- Health Check & System Status\n\nüîß TECHNICAL DETAILS:\n- Base URL: http://localhost:5000 (for testing)\n- Authentication: Bearer token in Authorization header\n- MT5 Server: 86.104.251.165:443\n- Manager Login: 1006, Password: Meta@5757\n- Client Login: 100267, Password: Test@123\n\nüöÄ READY FOR PRODUCTION: All endpoints tested and working",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "mt5-wrapper-api-complete"
  },
  "item": [
    {
      "name": "üîê Authentication",
      "item": [
        {
          "name": "Manager Login (30-day token)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-Tenant-ID",
                "value": "test_mgr_001",
                "description": "Manager tenant identifier"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"managerLogin\": \"1006\",\n  \"password\": \"Meta@5757\",\n  \"server\": \"86.104.251.165:443\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/manager/login",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "auth",
                "manager",
                "login"
              ]
            },
            "description": "Manager authentication with 30-day JWT token\n\nReturns:\n- access_token: JWT token valid for 30 days\n- manager_info: Manager details and permissions\n- tenant_info: Associated tenant information"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"login\": \"{{test_manager_login}}\",\n  \"password\": \"{{test_manager_password}}\",\n  \"server\": \"{{mt5_server}}\",\n  \"managerId\": \"test_mgr_001\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/api/auth/manager/login",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "auth",
                    "manager",
                    "login"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"token_type\": \"Bearer\",\n  \"expires_in\": 2592000,\n  \"manager_info\": {\n    \"login\": \"1006\",\n    \"name\": \"Test Manager\",\n    \"permissions\": [\"full_access\", \"client_management\", \"trading\"],\n    \"tenant_id\": \"test_mgr_001\"\n  },\n  \"tenant_info\": {\n    \"tenant_id\": \"test_mgr_001\",\n    \"manager_name\": \"Test Manager\",\n    \"subscription_plan\": \"premium\",\n    \"max_clients\": 1000\n  }\n}"
            }
          ]
        },
        {
          "name": "Client Login (unlimited token)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-Tenant-ID",
                "value": "test_mgr_001",
                "description": "Manager tenant identifier"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"clientLogin\": \"100267\",\n  \"password\": \"client_password\",\n  \"server\": \"86.104.251.165:443\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/client/login",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "auth",
                "client",
                "login"
              ]
            },
            "description": "Client authentication with unlimited JWT token\n\nReturns:\n- access_token: JWT token with no expiration\n- client_info: Client details and permissions\n- account_info: Trading account information"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"login\": \"{{test_client_login}}\",\n  \"password\": \"{{test_client_password}}\",\n  \"server\": \"{{mt5_server}}\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/api/auth/client/login",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "auth",
                    "client",
                    "login"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"token_type\": \"Bearer\",\n  \"expires_in\": null,\n  \"client_info\": {\n    \"login\": \"100267\",\n    \"name\": \"Test Client\",\n    \"email\": \"client@example.com\",\n    \"permissions\": [\"trading\", \"view_balance\"]\n  },\n  \"account_info\": {\n    \"balance\": 10000.50,\n    \"equity\": 9850.25,\n    \"margin\": 150.25,\n    \"margin_level\": 6568.17,\n    \"currency\": \"USD\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Validate Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "JWT token from login"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/validate",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "auth",
                "validate"
              ]
            },
            "description": "Validate JWT token and get user information\n\nReturns current user info and permissions"
          }
        },
        {
          "name": "Refresh Manager Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{manager_token}}",
                "description": "Current manager JWT token"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/manager/refresh",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "auth",
                "manager",
                "refresh"
              ]
            },
            "description": "Refresh manager token (extends 30-day validity)\n\nOnly works for manager tokens"
          }
        },
        {
          "name": "Revoke Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "JWT token to revoke"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/revoke",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "auth",
                "revoke"
              ]
            },
            "description": "Revoke JWT token (logout)\n\nToken becomes invalid immediately"
          }
        }
      ],
      "description": "Authentication endpoints for manager and client login"
    },
    {
      "name": "üë• User Management",
      "item": [
        {
          "name": "Get User List",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{manager_token}}",
                "description": "Manager JWT token required"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/users?group=demo&limit=50&offset=0",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "users"
              ],
              "query": [
                {
                  "key": "group",
                  "value": "demo",
                  "description": "Filter by group name"
                },
                {
                  "key": "limit",
                  "value": "50",
                  "description": "Number of users to return"
                },
                {
                  "key": "offset",
                  "value": "0",
                  "description": "Pagination offset"
                }
              ]
            },
            "description": "Get list of users with filtering and pagination\n\nManager token required - can see all users in their tenant"
          }
        },
        {
          "name": "Get User by Login",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{manager_token}}",
                "description": "Manager JWT token required"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/users/100267",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "users",
                "100267"
              ]
            },
            "description": "Get detailed user information by login\n\nIncludes account balance, positions, orders, etc."
          }
        },
        {
          "name": "Create New User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{manager_token}}",
                "description": "Manager JWT token required"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"login\": \"100268\",\n  \"name\": \"New Test User\",\n  \"email\": \"newuser@example.com\",\n  \"group\": \"demoforex\",\n  \"leverage\": 100,\n  \"password\": \"secure_password\",\n  \"phone\": \"+1234567890\",\n  \"country\": \"US\",\n  \"city\": \"New York\",\n  \"address\": \"123 Trading St\",\n  \"comment\": \"Created via API\",\n  \"balance\": 1000.00,\n  \"credit\": 0.00\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/users",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "users"
              ]
            },
            "description": "Create new trading account\n\nManager token required - creates user in manager's tenant"
          }
        },
        {
          "name": "Update User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{manager_token}}",
                "description": "Manager JWT token required"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Test User\",\n  \"email\": \"updated@example.com\",\n  \"phone\": \"+1987654321\",\n  \"city\": \"Los Angeles\",\n  \"comment\": \"Updated via API\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/users/100267",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "users",
                "100267"
              ]
            },
            "description": "Update user information\n\nManager token required - can update any user in their tenant"
          }
        },
        {
          "name": "Update User Balance",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{manager_token}}",
                "description": "Manager JWT token required"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"operation\": \"deposit\",\n  \"amount\": 500.00,\n  \"comment\": \"Bonus deposit via API\",\n  \"type\": \"bonus\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/users/100267/balance",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "users",
                "100267",
                "balance"
              ]
            },
            "description": "Update user account balance\n\nOperations: deposit, withdraw, bonus, correction\n\nManager token required"
          }
        },
        {
          "name": "Delete User",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{manager_token}}",
                "description": "Manager JWT token required"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/users/100267",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "users",
                "100267"
              ]
            },
            "description": "Delete user account\n\nManager token required - permanently removes user"
          }
        }
      ],
      "description": "User management endpoints for creating, updating, and managing trading accounts"
    },
    {
      "name": "üìã Order Management",
      "item": [
        {
          "name": "Get Open Orders",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{manager_token}}",
                "description": "Manager JWT token required"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/orders/open?login=100267&symbol=EURUSD",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "orders",
                "open"
              ],
              "query": [
                {
                  "key": "login",
                  "value": "100267",
                  "description": "User login (optional - manager can see all)"
                },
                {
                  "key": "symbol",
                  "value": "EURUSD",
                  "description": "Filter by symbol"
                }
              ]
            },
            "description": "Get open orders for user or all users (manager)\n\nReturns pending orders that haven't been filled yet"
          }
        },
        {
          "name": "Get Order History",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{manager_token}}",
                "description": "Manager JWT token required"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/orders/history?login=100267&from=1704067200&to=1704153600&limit=100",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "orders",
                "history"
              ],
              "query": [
                {
                  "key": "login",
                  "value": "100267",
                  "description": "User login (optional - manager can see all)"
                },
                {
                  "key": "from",
                  "value": "1704067200",
                  "description": "Unix timestamp from date"
                },
                {
                  "key": "to",
                  "value": "1704153600",
                  "description": "Unix timestamp to date"
                },
                {
                  "key": "limit",
                  "value": "100",
                  "description": "Maximum records to return"
                }
              ]
            },
            "description": "Get order history with date range filtering\n\nReturns completed/cancelled orders"
          }
        },
        {
          "name": "Create Market Order",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{manager_token}}",
                "description": "Manager JWT token required"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"login\": \"100267\",\n  \"symbol\": \"EURUSD\",\n  \"type\": \"OP_BUY\",\n  \"volume\": 0.01,\n  \"price\": 0,\n  \"stoploss\": 1.0800,\n  \"takeprofit\": 1.1200,\n  \"comment\": \"Market order via API\",\n  \"magic\": 12345,\n  \"deviation\": 10\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/orders/market",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "orders",
                "market"
              ]
            },
            "description": "Create market order (immediate execution)\n\nManager can place orders for any client account"
          }
        },
        {
          "name": "Create Pending Order",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{manager_token}}",
                "description": "Manager JWT token required"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"login\": \"100267\",\n  \"symbol\": \"EURUSD\",\n  \"type\": \"OP_BUYLIMIT\",\n  \"volume\": 0.01,\n  \"price\": 1.0850,\n  \"stoploss\": 1.0800,\n  \"takeprofit\": 1.1200,\n  \"expiration\": 1704153600,\n  \"comment\": \"Buy limit order via API\",\n  \"magic\": 12346\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/orders/pending",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "orders",
                "pending"
              ]
            },
            "description": "Create pending order (limit/stop orders)\n\nOrder types: OP_BUYLIMIT, OP_SELLLIMIT, OP_BUYSTOP, OP_SELLSTOP"
          }
        },
        {
          "name": "Modify Order",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{manager_token}}",
                "description": "Manager JWT token required"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"stoploss\": 1.0820,\n  \"takeprofit\": 1.1180,\n  \"expiration\": 1704233600,\n  \"comment\": \"Modified via API\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/orders/12345678",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "orders",
                "12345678"
              ]
            },
            "description": "Modify existing order (SL/TP, expiration, etc.)\n\nOnly pending orders can be modified"
          }
        },
        {
          "name": "Cancel Order",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{manager_token}}",
                "description": "Manager JWT token required"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/orders/12345678",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "orders",
                "12345678"
              ]
            },
            "description": "Cancel pending order\n\nOnly pending orders can be cancelled"
          }
        },
        {
          "name": "Get Order by Ticket",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{manager_token}}",
                "description": "Manager JWT token required"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/orders/12345678",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "orders",
                "12345678"
              ]
            },
            "description": "Get specific order details by ticket number\n\nReturns order information and current status"
          }
        }
      ],
      "description": "Order management endpoints for creating, modifying, and managing trading orders"
    },
    {
      "name": "üìä Market Data",
      "item": [
        {
          "name": "Get Symbol List",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "Any valid JWT token"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/market/symbols?group=forex&enabled=true",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "market",
                "symbols"
              ],
              "query": [
                {
                  "key": "group",
                  "value": "forex",
                  "description": "Filter by symbol group"
                },
                {
                  "key": "enabled",
                  "value": "true",
                  "description": "Only enabled symbols"
                }
              ]
            },
            "description": "Get list of available trading symbols\n\nReturns symbol information, spreads, margins, etc."
          }
        },
        {
          "name": "Get Symbol Info",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "Any valid JWT token"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/market/symbols/EURUSD",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "market",
                "symbols",
                "EURUSD"
              ]
            },
            "description": "Get detailed information for specific symbol\n\nIncludes contract size, spread, swap rates, trading hours, etc."
          }
        },
        {
          "name": "Get Current Prices",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "Any valid JWT token"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/market/prices?symbols=EURUSD,GBPUSD,USDJPY",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "market",
                "prices"
              ],
              "query": [
                {
                  "key": "symbols",
                  "value": "EURUSD,GBPUSD,USDJPY",
                  "description": "Comma-separated list of symbols"
                }
              ]
            },
            "description": "Get current bid/ask prices for symbols\n\nReal-time price data"
          }
        },
        {
          "name": "Get Chart Data (OHLC)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "Any valid JWT token"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/market/charts/EURUSD?timeframe=H1&from=1704067200&to=1704153600&count=100",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "market",
                "charts",
                "EURUSD"
              ],
              "query": [
                {
                  "key": "timeframe",
                  "value": "H1",
                  "description": "Timeframe: M1, M5, M15, M30, H1, H4, D1, W1, MN"
                },
                {
                  "key": "from",
                  "value": "1704067200",
                  "description": "Unix timestamp from date"
                },
                {
                  "key": "to",
                  "value": "1704153600",
                  "description": "Unix timestamp to date"
                },
                {
                  "key": "count",
                  "value": "100",
                  "description": "Number of bars to return"
                }
              ]
            },
            "description": "Get OHLC chart data for technical analysis\n\nReturns Open, High, Low, Close, Volume data"
          }
        },
        {
          "name": "Get Tick Data",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "Any valid JWT token"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/market/ticks/EURUSD?from=1704147200&to=1704153600",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "market",
                "ticks",
                "EURUSD"
              ],
              "query": [
                {
                  "key": "from",
                  "value": "1704147200",
                  "description": "Unix timestamp from date"
                },
                {
                  "key": "to",
                  "value": "1704153600",
                  "description": "Unix timestamp to date"
                }
              ]
            },
            "description": "Get historical tick data for symbol\n\nReturns bid/ask prices with timestamps"
          }
        },
        {
          "name": "Subscribe to Real-time Prices",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "Any valid JWT token"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"symbols\": [\"EURUSD\", \"GBPUSD\", \"USDJPY\"],\n  \"callback_url\": \"https://yourapp.com/webhook/prices\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/market/subscribe/prices",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "market",
                "subscribe",
                "prices"
              ]
            },
            "description": "Subscribe to real-time price updates via WebSocket/webhooks\n\nReceive live price feeds for specified symbols"
          }
        }
      ],
      "description": "Market data endpoints for symbols, prices, charts, and real-time data"
    },
    {
      "name": "üíº Trading Operations",
      "item": [
        {
          "name": "Get Account Positions",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{manager_token}}",
                "description": "Manager JWT token required"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/trading/positions?login=100267&symbol=EURUSD",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "trading",
                "positions"
              ],
              "query": [
                {
                  "key": "login",
                  "value": "100267",
                  "description": "User login (optional - manager can see all)"
                },
                {
                  "key": "symbol",
                  "value": "EURUSD",
                  "description": "Filter by symbol"
                }
              ]
            },
            "description": "Get open trading positions\n\nReturns current positions with P&L, margin, etc."
          }
        },
        {
          "name": "Get Account Balance",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{manager_token}}",
                "description": "Manager JWT token required"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/trading/balance/100267",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "trading",
                "balance",
                "100267"
              ]
            },
            "description": "Get account balance and margin information\n\nIncludes balance, equity, margin, margin level"
          }
        },
        {
          "name": "Get Trade History",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{manager_token}}",
                "description": "Manager JWT token required"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/trading/history?login=100267&from=1704067200&to=1704153600",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "trading",
                "history"
              ],
              "query": [
                {
                  "key": "login",
                  "value": "100267",
                  "description": "User login (optional - manager can see all)"
                },
                {
                  "key": "from",
                  "value": "1704067200",
                  "description": "Unix timestamp from date"
                },
                {
                  "key": "to",
                  "value": "1704153600",
                  "description": "Unix timestamp to date"
                }
              ]
            },
            "description": "Get trade history (deals/closed positions)\n\nReturns completed trades with profit/loss"
          }
        },
        {
          "name": "Close Position",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{manager_token}}",
                "description": "Manager JWT token required"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/trading/positions/12345678?login=100267",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "trading",
                "positions",
                "12345678"
              ],
              "query": [
                {
                  "key": "login",
                  "value": "100267",
                  "description": "User login"
                }
              ]
            },
            "description": "Close open trading position\n\nManager can close positions for any client"
          }
        },
        {
          "name": "Modify Position",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{manager_token}}",
                "description": "Manager JWT token required"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"stoploss\": 1.0820,\n  \"takeprofit\": 1.1180,\n  \"comment\": \"Modified via API\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/trading/positions/12345678?login=100267",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "trading",
                "positions",
                "12345678"
              ],
              "query": [
                {
                  "key": "login",
                  "value": "100267",
                  "description": "User login"
                }
              ]
            },
            "description": "Modify open position (SL/TP)\n\nManager can modify positions for any client"
          }
        }
      ],
      "description": "Trading operations endpoints for positions, balance, and trade management"
    },
    {
      "name": "üè¢ Multi-tenant Management",
      "item": [
        {
          "name": "Get Tenant Info",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{manager_token}}",
                "description": "Manager JWT token required"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/tenant/info",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "tenant",
                "info"
              ]
            },
            "description": "Get current tenant information\n\nReturns tenant details, subscription, limits"
          }
        },
        {
          "name": "Get Tenant Statistics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{manager_token}}",
                "description": "Manager JWT token required"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/tenant/stats",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "tenant",
                "stats"
              ]
            },
            "description": "Get tenant usage statistics\n\nReturns user count, API calls, trading volume, etc."
          }
        },
        {
          "name": "Update Tenant Settings",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{manager_token}}",
                "description": "Manager JWT token required"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"settings\": {\n    \"max_clients\": 2000,\n    \"api_rate_limit\": 1000,\n    \"features\": {\n      \"real_time_data\": true,\n      \"webhooks\": true,\n      \"mobile_app\": true\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/tenant/settings",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "tenant",
                "settings"
              ]
            },
            "description": "Update tenant configuration settings\n\nManager can modify their own tenant settings"
          }
        }
      ],
      "description": "Multi-tenant management endpoints for tenant administration"
    },
    {
      "name": "üìä System Health & Monitoring",
      "item": [
        {
          "name": "API Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "health"
              ]
            },
            "description": "Check API service health\n\nReturns system status, version, uptime"
          }
        },
        {
          "name": "MT5 Connection Status",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{manager_token}}",
                "description": "Manager JWT token required"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/system/mt5-status",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "system",
                "mt5-status"
              ]
            },
            "description": "Check MT5 server connection status\n\nReturns connection health, latency, server info"
          }
        },
        {
          "name": "API Usage Statistics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{manager_token}}",
                "description": "Manager JWT token required"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/system/usage?period=24h",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "system",
                "usage"
              ],
              "query": [
                {
                  "key": "period",
                  "value": "24h",
                  "description": "Time period: 1h, 24h, 7d, 30d"
                }
              ]
            },
            "description": "Get API usage statistics\n\nReturns request counts, error rates, performance metrics"
          }
        }
      ],
      "description": "System monitoring and health check endpoints"
    },
    {
      "name": "üåê WebSocket Real-time APIs",
      "item": [
        {
          "name": "Get WebSocket Info",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "Any valid JWT token"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/websocket/info",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "websocket",
                "info"
              ]
            },
            "description": "Get SignalR WebSocket connection information\n\nReturns hub URL, supported protocols, connection limits"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/websocket/info",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "websocket",
                    "info"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"hubUrl\": \"/hubs/marketdata\",\n  \"connectionType\": \"SignalR WebSocket\",\n  \"supportedProtocols\": [\"json\", \"messagepack\"],\n  \"maxConnectionsPerClient\": 10,\n  \"heartbeatInterval\": 30,\n  \"reconnectDelay\": 5000,\n  \"clientLogin\": 0,\n  \"status\": \"SignalR WebSocket active\",\n  \"features\": [\"Real-time tick data\", \"Price quotes streaming\", \"Connection health monitoring\", \"Automatic reconnection\"],\n  \"timestamp\": \"2025-10-07T12:08:30.9655673+00:00\"\n}"
            }
          ]
        },
        {
          "name": "Get WebSocket Status",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "Any valid JWT token"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/websocket/status",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "websocket",
                "status"
              ]
            },
            "description": "Get current SignalR WebSocket connection status\n\nReturns hub status, active subscriptions, connection info"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/websocket/status",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "websocket",
                    "status"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"isConnected\": true,\n  \"hubEndpoint\": \"/hubs/marketdata\",\n  \"activeSubscriptions\": 0,\n  \"totalConnections\": 0,\n  \"clientLogin\": 0,\n  \"status\": \"SignalR WebSocket hub active\",\n  \"uptime\": 0,\n  \"supportedFeatures\": [\"SubscribeToTicks\", \"UnsubscribeFromTicks\", \"SubscribeToQuotes\", \"GetStatus\", \"Ping\"],\n  \"timestamp\": \"2025-10-07T12:08:50.1759015+00:00\"\n}"
            }
          ]
        },
        {
          "name": "Subscribe to Symbol",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "Any valid JWT token"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{base_url}}/api/websocket/subscribe/EURUSD",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "websocket",
                "subscribe",
                "EURUSD"
              ]
            },
            "description": "Subscribe to real-time price updates for a symbol\n\nReturns subscription confirmation with unique ID"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{base_url}}/api/websocket/subscribe/EURUSD",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "websocket",
                    "subscribe",
                    "EURUSD"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Subscribed to real-time updates for EURUSD\",\n  \"symbol\": \"EURUSD\",\n  \"clientLogin\": 0,\n  \"subscriptionId\": \"247c95f3-f427-4b06-a1c5-30c714ecfc88\",\n  \"timestamp\": \"2025-10-07T12:09:06.2013316+00:00\"\n}"
            }
          ]
        },
        {
          "name": "Unsubscribe from Symbol",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "Any valid JWT token"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{base_url}}/api/websocket/unsubscribe/EURUSD",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "websocket",
                "unsubscribe",
                "EURUSD"
              ]
            },
            "description": "Unsubscribe from real-time price updates for a symbol\n\nStops receiving updates for the specified symbol"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{base_url}}/api/websocket/unsubscribe/EURUSD",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "websocket",
                    "unsubscribe",
                    "EURUSD"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Unsubscribed from real-time updates for EURUSD\",\n  \"symbol\": \"EURUSD\",\n  \"clientLogin\": 0,\n  \"timestamp\": \"2025-10-07T12:09:22.8235095+00:00\"\n}"
            }
          ]
        },
        {
          "name": "Batch Subscribe to Symbols",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "Any valid JWT token"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"symbols\": [\"EURUSD\", \"GBPUSD\", \"USDJPY\"]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/websocket/subscribe/batch",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "websocket",
                "subscribe",
                "batch"
              ]
            },
            "description": "Subscribe to real-time updates for multiple symbols at once\n\nReturns subscription confirmations for each symbol"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"symbols\": [\"EURUSD\", \"GBPUSD\"]\n}"
                },
                "url": {
                  "raw": "{{base_url}}/api/websocket/subscribe/batch",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "websocket",
                    "subscribe",
                    "batch"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Subscribed to 2 symbols\",\n  \"clientLogin\": 0,\n  \"subscriptions\": [\n    {\n      \"symbol\": \"EURUSD\",\n      \"subscriptionId\": \"b04405c9-68dc-4a1c-9082-d55261036cfa\",\n      \"status\": \"subscribed\"\n    },\n    {\n      \"symbol\": \"GBPUSD\",\n      \"subscriptionId\": \"408cc9ce-3bbe-4d07-a8c8-8f28d4534bb1\",\n      \"status\": \"subscribed\"\n    }\n  ],\n  \"timestamp\": \"2025-10-07T12:09:42.440771+00:00\"\n}"
            }
          ]
        }
      ],
      "description": "WebSocket real-time APIs for live market data streaming"
    },
    {
      "name": "üìä Order Book APIs",
      "item": [
        {
          "name": "üìä Subscribe to Order Book (WebSocket)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "Any valid JWT token"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"maxDepth\": 20\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/orderbook/subscribe/EURUSD?maxDepth=20",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "orderbook",
                "subscribe",
                "EURUSD"
              ],
              "query": [
                {
                  "key": "maxDepth",
                  "value": "20",
                  "description": "Maximum depth to return (default: 20)"
                }
              ]
            },
            "description": "Subscribe to real-time order book updates via WebSocket\n\nStarts SignalR streaming of bid/ask order book data\n\nReturns subscription confirmation with unique ID"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"maxDepth\": 20\n}"
                },
                "url": {
                  "raw": "{{base_url}}/api/orderbook/subscribe/EURUSD?maxDepth=20",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "orderbook",
                    "subscribe",
                    "EURUSD"
                  ],
                  "query": [
                    {
                      "key": "maxDepth",
                      "value": "20"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Subscribed to EURUSD order book\",\n  \"symbol\": \"EURUSD\",\n  \"subscriptionId\": \"a1b2c3d4-e5f6-7890-abcd-ef1234567890\",\n  \"maxDepth\": 20,\n  \"timestamp\": \"2025-10-07T13:32:44.000Z\"\n}"
            }
          ]
        },
        {
          "name": "üìâ Unsubscribe from Order Book (WebSocket)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "Any valid JWT token"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{base_url}}/api/orderbook/unsubscribe/EURUSD",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "orderbook",
                "unsubscribe",
                "EURUSD"
              ]
            },
            "description": "Unsubscribe from real-time order book updates\n\nStops SignalR streaming of order book data"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{base_url}}/api/orderbook/unsubscribe/EURUSD",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "orderbook",
                    "unsubscribe",
                    "EURUSD"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Unsubscribed from EURUSD order book\",\n  \"symbol\": \"EURUSD\",\n  \"subscriptionId\": \"a1b2c3d4-e5f6-7890-abcd-ef1234567890\",\n  \"timestamp\": \"2025-10-07T13:32:44.000Z\"\n}"
            }
          ]
        },
        {
          "name": "üìä Get Order Book Snapshot",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "Any valid JWT token"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/orderbook/EURUSD?maxDepth=20",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "orderbook",
                "EURUSD"
              ],
              "query": [
                {
                  "key": "maxDepth",
                  "value": "20",
                  "description": "Maximum depth to return (default: 20)"
                }
              ]
            },
            "description": "Get current order book snapshot for a symbol\n\nReturns real-time bid/ask order book data with prices, volumes, and orders\n\nData includes:\n- Bid prices (sorted descending)\n- Ask prices (sorted ascending)\n- Volume at each price level\n- Number of orders at each level"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/orderbook/EURUSD?maxDepth=20",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "orderbook",
                    "EURUSD"
                  ],
                  "query": [
                    {
                      "key": "maxDepth",
                      "value": "20"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"symbol\": \"EURUSD\",\n  \"timestamp\": 1728305564000,\n  \"serverTimestamp\": 1728305564000,\n  \"updateType\": \"snapshot\",\n  \"bids\": [\n    {\n      \"price\": 1.0850,\n      \"volume\": 1000000,\n      \"orders\": 1,\n      \"type\": \"bid\"\n    },\n    {\n      \"price\": 1.0849,\n      \"volume\": 500000,\n      \"orders\": 1,\n      \"type\": \"bid\"\n    },\n    {\n      \"price\": 1.0848,\n      \"volume\": 750000,\n      \"orders\": 1,\n      \"type\": \"bid\"\n    }\n  ],\n  \"asks\": [\n    {\n      \"price\": 1.0852,\n      \"volume\": 1000000,\n      \"orders\": 1,\n      \"type\": \"ask\"\n    },\n    {\n      \"price\": 1.0853,\n      \"volume\": 500000,\n      \"orders\": 1,\n      \"type\": \"ask\"\n    },\n    {\n      \"price\": 1.0854,\n      \"volume\": 750000,\n      \"orders\": 1,\n      \"type\": \"ask\"\n    }\n  ]\n}"
            }
          ]
        },
        {
          "name": "üìã Get Order Book Status",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "Any valid JWT token"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/orderbook/status",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "orderbook",
                "status"
              ]
            },
            "description": "Get order book service status and statistics\n\nReturns:\n- Active subscriptions count\n- Total subscriptions/unsubscriptions\n- Service uptime\n- Last update timestamp\n- Currently subscribed symbols"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/orderbook/status",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "orderbook",
                    "status"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"service\": {\n    \"activeSubscriptions\": 2,\n    \"totalSubscriptions\": 5,\n    \"totalUnsubscriptions\": 3,\n    \"totalUpdates\": 1250,\n    \"uptimeSeconds\": 3600,\n    \"lastUpdateTimestamp\": 1728305564000\n  },\n  \"subscriptions\": {\n    \"symbols\": [\"EURUSD\", \"GBPUSD\"],\n    \"count\": 2\n  },\n  \"timestamp\": 1728305564000\n}"
            }
          ]
        },
        {
          "name": "üìä Get Order Book Service Stats",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "Any valid JWT token"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/orderbook/stats",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "orderbook",
                "stats"
              ]
            },
            "description": "Get detailed order book service statistics\n\nReturns performance metrics and service health data"
          }
        },
        {
          "name": "üîç Check Order Book Subscription",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "Any valid JWT token"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/orderbook/subscriptions/EURUSD",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "orderbook",
                "subscriptions",
                "EURUSD"
              ]
            },
            "description": "Check if a symbol is subscribed to order book updates\n\nReturns subscription status for the specified symbol"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/orderbook/subscriptions/EURUSD",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "orderbook",
                    "subscriptions",
                    "EURUSD"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"symbol\": \"EURUSD\",\n  \"isSubscribed\": true,\n  \"status\": \"subscribed\"\n}"
            }
          ]
        },
        {
          "name": "üìã Get Subscribed Symbols",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "Any valid JWT token"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/orderbook/subscriptions",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "orderbook",
                "subscriptions"
              ]
            },
            "description": "Get list of all symbols currently subscribed to order book updates\n\nReturns array of subscribed symbols with count"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/orderbook/subscriptions",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "orderbook",
                    "subscriptions"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"subscribedSymbols\": [\"EURUSD\", \"GBPUSD\", \"USDJPY\"],\n  \"count\": 3\n}"
            }
          ]
        }
      ],
      "description": "Order Book APIs for real-time market depth data via WebSocket and REST"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set base URL variable if not set (default to localhost for development)",
          "if (!pm.environment.get('base_url')) {",
          "    pm.environment.set('base_url', 'http://localhost:5000');",
          "    console.log('Base URL set to localhost:5000 for development');",
          "}",
          "",
          "// Set test credentials if not set",
          "if (!pm.environment.get('test_manager_login')) {",
          "    pm.environment.set('test_manager_login', '1006');",
          "    pm.environment.set('test_manager_password', 'Meta@5757');",
          "    pm.environment.set('test_client_login', '100267');",
          "    pm.environment.set('test_client_password', 'Test@123');",
          "    pm.environment.set('mt5_server', '86.104.251.165:443');",
          "    console.log('Test credentials set for development');",
          "}",
          "",
          "// Auto-refresh manager token if close to expiry",
          "const token = pm.environment.get('manager_token');",
          "if (token) {",
          "    try {",
          "        const payload = JSON.parse(atob(token.split('.')[1]));",
          "        const expiry = payload.exp * 1000;",
          "        const now = Date.now();",
          "        const timeToExpiry = expiry - now;",
          "        ",
          "        // If token expires in less than 1 hour, show warning",
          "        if (timeToExpiry < 3600000) {",
          "            console.log('‚ö†Ô∏è Manager token expiring soon (' + Math.round(timeToExpiry/60000) + ' minutes)');",
          "            console.log('Consider refreshing the token using the Manager Token Refresh endpoint');",
          "        } else {",
          "            console.log('‚úÖ Manager token valid for ' + Math.round(timeToExpiry/3600000) + ' more hours');",
          "        }",
          "    } catch (e) {",
          "        console.log('Could not parse token expiry');",
          "    }",
          "}",
          "",
          "// Log current environment",
          "console.log('üåê Base URL: ' + pm.environment.get('base_url'));",
          "console.log('üîê Manager Token: ' + (pm.environment.get('manager_token') ? 'Set' : 'Not set'));",
          "console.log('üë§ Client Token: ' + (pm.environment.get('client_token') ? 'Set' : 'Not set'));"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:5000",
      "type": "string",
      "description": "Local development server URL - change to https://api.mt5wrapper.com for production"
    },
    {
      "key": "manager_token",
      "value": "",
      "type": "string",
      "description": "JWT token from manager login (30-day expiry)"
    },
    {
      "key": "client_token",
      "value": "",
      "type": "string",
      "description": "JWT token from client login (unlimited expiry)"
    },
    {
      "key": "access_token",
      "value": "{{manager_token}}",
      "type": "string",
      "description": "Default access token (uses manager token)"
    },
    {
      "key": "test_manager_login",
      "value": "1006",
      "type": "string",
      "description": "Test manager login for development"
    },
    {
      "key": "test_manager_password",
      "value": "Meta@5757",
      "type": "string",
      "description": "Test manager password for development"
    },
    {
      "key": "test_client_login",
      "value": "100267",
      "type": "string",
      "description": "Test client login for development"
    },
    {
      "key": "test_client_password",
      "value": "Test@123",
      "type": "string",
      "description": "Test client password for development"
    },
    {
      "key": "mt5_server",
      "value": "86.104.251.165:443",
      "type": "string",
      "description": "MT5 server address for testing"
    }
  ]
}